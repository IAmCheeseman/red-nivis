[gd_scene load_steps=8 format=2]

[ext_resource path="res://UI/Inventory/Slot.gd" type="Script" id=1]
[ext_resource path="res://Items/Weapons/Sprites/Pistol.png" type="Texture" id=4]

[sub_resource type="StreamTexture" id=1]

[sub_resource type="StreamTexture" id=2]

[sub_resource type="StreamTexture" id=3]

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform float max_line_width = 10.0;
uniform float min_line_width = 5.0;
uniform float freq = 1.0;
uniform float block_size = 20.0;
uniform vec4 outline_colour : hint_color = vec4(0,0,0,1);

const float pi = 3.1415;
const int ang_res = 16;


float hash(vec2 p, float s) {
	return fract(35.1 * sin(dot(vec3(112.3, 459.2, 753.2), vec3(p, s))));
}

float noise(vec2 p, float s) {
	vec2 d = vec2(0, 1);
	vec2 b = floor(p);
	vec2 f = fract(p);
	return mix(
		mix(hash(b + d.xx, s), hash(b + d.yx, s), f.x),
		mix(hash(b + d.xy, s), hash(b + d.yy, s), f.x), f.y);
}

float get_line_width(vec2 p, float s) {
	p /= block_size;
	float w = 0.0;
	float intensity = 1.0;
	for (int i = 0; i < 3; i++) {
		w = mix(w, noise(p, s), intensity);
		p /= 2.0;
		intensity /= 2.0;
	}
	
	return mix(max_line_width, min_line_width, w) * abs(sin(TIME)) + 0.5;
}

void fragment() {
	vec2 uv = UV + (vec2(cos(TIME), sin(TIME)) / 50.0);
	float alpha = 0.0;
	float timeStep = TIME * freq;
	vec2 scale = TEXTURE_PIXEL_SIZE;
	scale *= get_line_width(UV / TEXTURE_PIXEL_SIZE, 0.5);
	for (int i = 0; i < ang_res; i++) {
		float angle = 2.0 * pi * float(i) / float(ang_res);
		vec2 disp = scale * vec2(cos(angle), sin(angle));
		alpha += texture(TEXTURE, uv + disp).a;
	}
	
	if ((alpha > 0.0) && (texture(TEXTURE, uv).a < 0.1)) {
		COLOR = outline_colour;
	}
	else {
		COLOR = texture(TEXTURE, uv);
	}
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/max_line_width = 1.0
shader_param/min_line_width = 0.0
shader_param/freq = 10000.0
shader_param/block_size = 10.0
shader_param/outline_colour = Color( 1, 1, 1, 1 )

[node name="Slot" type="TextureButton"]
self_modulate = Color( 1, 1, 1, 0 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -301.0
margin_bottom = -201.0
rect_min_size = Vector2( 0, 19 )
texture_normal = SubResource( 1 )
texture_pressed = SubResource( 2 )
texture_hover = SubResource( 3 )
texture_disabled = SubResource( 2 )
stretch_mode = 2
script = ExtResource( 1 )

[node name="Panel" type="Panel" parent="."]
visible = false
margin_left = -35.0
margin_top = -24.0
margin_right = 57.0
margin_bottom = 54.0

[node name="TextureRect" type="TextureRect" parent="."]
material = SubResource( 5 )
margin_left = 2.0
margin_top = 3.0
margin_right = 16.0
margin_bottom = 17.0
texture = ExtResource( 4 )
expand = true
stretch_mode = 6

[node name="WeaponHolder" type="Node2D" parent="."]
position = Vector2( 9, 10 )
