[gd_scene load_steps=13 format=2]

[ext_resource path="res://EnviormentalArt/BackGrounds/Clouds.png" type="Texture" id=1]
[ext_resource path="res://EnviormentalArt/Solids/PlaceTiles.tscn" type="PackedScene" id=2]
[ext_resource path="res://Player/Player.tscn" type="PackedScene" id=3]
[ext_resource path="res://EnviormentalArt/BackGrounds/MountainsFar.png" type="Texture" id=4]
[ext_resource path="res://EnviormentalArt/BackGrounds/MountainsNear.png" type="Texture" id=5]
[ext_resource path="res://Player/PlaceTile.wav" type="AudioStream" id=6]
[ext_resource path="res://CustomNodes/CustomParallax.gd" type="Script" id=7]
[ext_resource path="res://WorldGeneration/WorldManagement/WorldManager.tscn" type="PackedScene" id=8]
[ext_resource path="res://WorldGeneration/World.gd" type="Script" id=9]
[ext_resource path="res://WorldGeneration/VisualEffects/MistSpawner.tscn" type="PackedScene" id=10]
[ext_resource path="res://UI/Minimap/Minimap.tscn" type="PackedScene" id=11]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D
class_name SoundManager

export var audio : AudioStream
export var directional = false
export(float, -80, 24) var volumeMod = 0
export(String, \"Master\", \"Ambient\", \"Music\", \"SFX\") var bus = 0

signal finished


func play():
	# Creating the audio player

	var newAudioPlayer
	match directional:
		true:
			newAudioPlayer = AudioStreamPlayer2D.new()
		false:
			newAudioPlayer = AudioStreamPlayer.new()

	# Setting parameters
	newAudioPlayer.stream = audio
	newAudioPlayer.bus = bus
	newAudioPlayer.autoplay = true
	newAudioPlayer.volume_db = volumeMod
	newAudioPlayer.connect(\"finished\", self, \"_on_audio_finished\", [newAudioPlayer])

	add_child(newAudioPlayer)


func _on_audio_finished(player):
	emit_signal(\"finished\")
	player.queue_free()


# Making sure sounds can't pile up and play all at once.
func _on_SoundManager_tree_exiting():
	for c in get_children():
		c.queue_free()
"

[node name="World" type="Node2D" groups=[
"world",
]]
script = ExtResource( 9 )

[node name="Background" type="Node2D" parent="."]
show_behind_parent = true
z_index = -2

[node name="FarParallax" type="Node2D" parent="Background"]
script = ExtResource( 7 )
scrollSpeed = Vector2( 0.9, 1 )
cameraPath = NodePath("../../Props/Player/Camera")
limitsStart = Vector2( -2.34783e+10, 3000 )
limitsEnd = Vector2( 2.34783e+10, 3300 )

[node name="Far" type="Sprite" parent="Background/FarParallax"]
texture = ExtResource( 4 )
centered = false
offset = Vector2( 0, -50 )
region_enabled = true
region_rect = Rect2( 0, 0, 8.32567e+06, 350 )

[node name="NearParallax" type="Node2D" parent="Background"]
script = ExtResource( 7 )
scrollSpeed = Vector2( 0.65, 1 )
cameraPath = NodePath("../../Props/Player/Camera")
limitsStart = Vector2( -2.34783e+10, 3050 )
limitsEnd = Vector2( 2.34783e+10, 3300 )

[node name="Close" type="Sprite" parent="Background/NearParallax"]
texture = ExtResource( 5 )
centered = false
offset = Vector2( 0, -50 )
region_enabled = true
region_rect = Rect2( 0, 0, 8.32567e+06, 350 )

[node name="Sky" type="CanvasLayer" parent="."]
layer = -128

[node name="Sky" type="TextureRect" parent="Sky"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 1 )
stretch_mode = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Props" type="YSort" parent="."]

[node name="Player" parent="Props" instance=ExtResource( 3 )]
position = Vector2( 190, 150 )

[node name="Minimap" parent="Props/Player/CanvasLayer" index="2" instance=ExtResource( 11 )]
visible = false

[node name="MistSpawner" parent="Props/Player" instance=ExtResource( 10 )]
position = Vector2( -8, -8 )

[node name="PlaceTiles" parent="Props" instance=ExtResource( 2 )]

[node name="Atmosphere" type="CanvasModulate" parent="."]

[node name="TilePlaceSFX" type="Node2D" parent="."]
script = SubResource( 1 )
audio = ExtResource( 6 )
directional = true
bus = "SFX"

[node name="WorldManager" parent="." instance=ExtResource( 8 )]

[connection signal="tree_entered" from="." to="." method="_on_World_tree_entered"]
[connection signal="dropGun" from="Props/Player" to="." method="_on_drop_gun"]
[connection signal="removeTile" from="Props/Player" to="." method="_on_player_removeTile"]

[editable path="Props/Player"]
[editable path="Props/Player/Hurtbox"]
[editable path="Props/Player/SoftCollision"]
